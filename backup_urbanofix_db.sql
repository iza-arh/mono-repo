--
-- PostgreSQL database dump
--

\restrict YSEAr70nEV6yusXnrLfmdcsc6EDcgbOWv7md5j5JttsdCZqoHugKb7erBtZ6nwX

-- Dumped from database version 16.10
-- Dumped by pg_dump version 16.10

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: reportstate; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public.reportstate AS ENUM (
    'ASSIGNED',
    'IN_PROGRESS',
    'IN_TRANSIT',
    'NO_PROCEDE',
    'REJECTED',
    'REPORTED',
    'RESOLVED',
    'VALIDATED'
);


ALTER TYPE public.reportstate OWNER TO neondb_owner;

--
-- Name: severity; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public.severity AS ENUM (
    'HIGH',
    'LOW',
    'MEDIUM'
);


ALTER TYPE public.severity OWNER TO neondb_owner;

--
-- Name: userrole; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public.userrole AS ENUM (
    'ADMIN',
    'CITIZEN',
    'MANAGER',
    'TECHNICIAN'
);


ALTER TYPE public.userrole OWNER TO neondb_owner;

--
-- Name: CAST (public.reportstate AS character varying); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (public.reportstate AS character varying) WITH INOUT AS IMPLICIT;


--
-- Name: CAST (public.severity AS character varying); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (public.severity AS character varying) WITH INOUT AS IMPLICIT;


--
-- Name: CAST (public.userrole AS character varying); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (public.userrole AS character varying) WITH INOUT AS IMPLICIT;


--
-- Name: CAST (character varying AS public.reportstate); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (character varying AS public.reportstate) WITH INOUT AS IMPLICIT;


--
-- Name: CAST (character varying AS public.severity); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (character varying AS public.severity) WITH INOUT AS IMPLICIT;


--
-- Name: CAST (character varying AS public.userrole); Type: CAST; Schema: -; Owner: -
--

CREATE CAST (character varying AS public.userrole) WITH INOUT AS IMPLICIT;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: assignment_technicians; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.assignment_technicians (
    assignment_id uuid NOT NULL,
    technician_id character varying(255) NOT NULL
);


ALTER TABLE public.assignment_technicians OWNER TO neondb_owner;

--
-- Name: categories; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.categories (
    category_id bigint NOT NULL,
    code character varying(255) NOT NULL,
    created_at timestamp with time zone,
    is_active boolean NOT NULL,
    name character varying(255) NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.categories OWNER TO neondb_owner;

--
-- Name: categories_category_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.categories ALTER COLUMN category_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.categories_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: comments; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.comments (
    comment_id uuid NOT NULL,
    content text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    is_public boolean NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id character varying(255),
    report_id character varying(255)
);


ALTER TABLE public.comments OWNER TO neondb_owner;

--
-- Name: notifications; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.notifications (
    notification_id character varying(255) NOT NULL,
    created_at timestamp with time zone,
    notification_channel smallint NOT NULL,
    payload jsonb,
    status text,
    user_id character varying(255),
    CONSTRAINT notifications_notification_channel_check CHECK (((notification_channel >= 0) AND (notification_channel <= 2)))
);


ALTER TABLE public.notifications OWNER TO neondb_owner;

--
-- Name: report_history; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.report_history (
    report_history_id integer NOT NULL,
    action text NOT NULL,
    comment text,
    created_at timestamp with time zone NOT NULL,
    metadata jsonb,
    new_state text,
    old_state text,
    performed_by character varying(255),
    report_id character varying(255)
);


ALTER TABLE public.report_history OWNER TO neondb_owner;

--
-- Name: report_history_report_history_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.report_history ALTER COLUMN report_history_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.report_history_report_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report_photos; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.report_photos (
    report_photo_id character varying(255) NOT NULL,
    is_active boolean NOT NULL,
    metadata jsonb,
    mime_type text,
    size_bytes bigint,
    thumbnail_url text,
    uploaded_at timestamp with time zone,
    url text NOT NULL,
    report_id character varying(255) NOT NULL,
    user_id character varying(255) NOT NULL
);


ALTER TABLE public.report_photos OWNER TO neondb_owner;

--
-- Data for Name: assignment_technicians; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.assignment_technicians (assignment_id, technician_id) FROM stdin;
\.


--
-- Data for Name: categories; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.categories (category_id, code, created_at, is_active, name, updated_at) FROM stdin;
\.


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.comments (comment_id, content, created_at, is_public, updated_at, author_id, report_id) FROM stdin;
\.


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.notifications (notification_id, created_at, notification_channel, payload, status, user_id) FROM stdin;
\.


--
-- Data for Name: report_history; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.report_history (report_history_id, action, comment, created_at, metadata, new_state, old_state, performed_by, report_id) FROM stdin;
\.


--
-- Data for Name: report_photos; Type: TABLE DATA; Schema: public; Owner: neondb_owner
--

COPY public.report_photos (report_photo_id, is_active, metadata, mime_type, size_bytes, thumbnail_url, uploaded_at, url, report_id, user_id) FROM stdin;
\.


--
-- Name: categories_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.categories_category_id_seq', 1, false);


--
-- Name: report_history_report_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: neondb_owner
--

SELECT pg_catalog.setval('public.report_history_report_history_id_seq', 1, false);


--
-- Name: categories categories_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_pkey PRIMARY KEY (category_id);


--
-- Name: comments comments_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (comment_id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (notification_id);


--
-- Name: report_history report_history_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.report_history
    ADD CONSTRAINT report_history_pkey PRIMARY KEY (report_history_id);


--
-- Name: report_photos report_photos_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.report_photos
    ADD CONSTRAINT report_photos_pkey PRIMARY KEY (report_photo_id);


--
-- Name: categories ukiwylx6fb2dqdw8kfc31vaiiyp; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT ukiwylx6fb2dqdw8kfc31vaiiyp UNIQUE (code);


--
-- PostgreSQL database dump complete
--

\unrestrict YSEAr70nEV6yusXnrLfmdcsc6EDcgbOWv7md5j5JttsdCZqoHugKb7erBtZ6nwX

